# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
     avatars_directory: '%kernel.project_dir%/public/uploads/avatars'
     photos_directory: '%kernel.project_dir%/public/uploads/photos'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
#    App\Security\Voter\UserVoter:
#        tags:
#            - { name: security.voter }
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\AvatarService:
        arguments:
            $targetDirectory: '%avatars_directory%'


    App\Service\FileUploadService:
        arguments:
            $targetDirectory: '%photos_directory%'


    App\Service\AvatarUploadService:
        arguments:
            $targetDirectory: '%avatars_directory%'


    App\Service\PhotoService:
        arguments:
             $targetDirectory: '%photos_directory%'

    App\Security\AccessDeniedHandler:
        tags:
            - { name: 'monolog.logger', channel: 'security' }

    App\Resolver\PhotoListInputFiltersDtoResolver:
        tags:
            - { name: 'controller.argument_value_resolver' }

    App\EventListener\AccessDeniedListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception', method: 'onKernelException' }

    App\Security\UserChecker:
        tags:
            - { name: 'security.user_checker', alias: 'app.user_checker' }

    App\Form\Type\PhotoType:
        arguments:
            - '@App\Form\DataTransformer\TagsDataTransformer'  # Argument 1: TagsDataTransformer
            - '@security.authorization_checker'  # Argument 2: AuthorizationCheckerInterface
        tags: [ 'form.type' ]
    App\Form\Type\PhotoEditType:
        arguments:
            - '@App\Form\DataTransformer\TagsDataTransformer'  # Argument 1: TagsDataTransformer
            - '@security.authorization_checker'  # Argument 2: AuthorizationCheckerInterface
        tags: [ 'form.type' ]